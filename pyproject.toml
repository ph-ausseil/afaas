[tool.poetry]
name = "AFAAS"
version = "0.0.2"
description = ""
authors = ["Pierre-Henri AUSSEIL"]
license = "No license, you are not allowed to read this code, neither execute it, nor copy it, nor modify it, nor distribute it, nor use it in any way, shape or form."
readme = "README.md"
packages = [
    { include = "AFAAS", from = "." },
    { include = "app", from = "." },
    # Add more packages as needed
]

#[tool.poetry.overrides]
#"aiohttp" = "3.8.3"

[tool.poetry.scripts]
demo = "app.cli_app.cli:run"
run-server= "app.cli:serve"
#test-debug = "pytest -s --pdb tests"


[tool.poetry.dependencies]
#agbenchmark = {git = "https://github.com/Significant-Gravitas/AutoGPT.git", subdirectory = "benchmark", optional = true}
google-cloud-logging = "^3.8.0"
google-cloud-storage = "^2.13.0"
psycopg2-binary = "^2.9.9"
python = ">=3.11,<3.12"
beautifulsoup4 = "^4.12.2"
boto3 = "^1.33.6"
charset-normalizer = "^2.0"
click = "*"
colorama = "^0.4.6"
distro = "^1.8.0"
docker = "*"
duckduckgo-search = "^4.0.0"
en-core-web-sm = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.5.0/en_core_web_sm-3.5.0-py3-none-any.whl"}
fastapi = "*"
ftfy = "^6.1.1"
gitpython = "^3.1.32"
google-api-python-client = "*"
gTTS = "^2.3.1"
hypercorn = "^0.14.4"
inflection = "*"
jsonschema = "*"
langchain = "^0.1.0"
llama-index = "*"
numpy = "*"
openai = "^1.6.1"
orjson = "^3.8.10"
Pillow = "*"
pinecone-client = "^2.2.1"
playsound = "~1.2.2"
prompt_toolkit = "^3.0.38"
pydantic = "*"
pylatexenc = "*"
pypdf = "^3.1.0"
python-docx = "*"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"
readability-lxml = "^0.8.1"
redis = "*"
requests = "*"
selenium = "^4.11.2"
spacy = "^3.0.0"
tiktoken = "^0.5.0"
webdriver-manager = "*"

# OpenAI and Generic plugins import
openapi-python-client = "^0.14.0"
youtube-search = "^2.1.2"
wikipedia = "^1.4.0"
arxiv = "^2.1.0"
aiohttp = "^3.8.1"
airbyte-cdk = "^0.58.1"
google-auth-oauthlib = "^1.2.0"
dirsync = "^2.2.5"
google-search-results = "^2.4.2"
youtube-transcript-api = "^0.6.2"
llama-hub = "0.0.71"
langchain-openai = "^0.0.3"


[tool.poetry.extras]
#benchmark = ["agbenchmark"]

[tool.poetry.group.dev.dependencies]
black = "*"
boto3-stubs = {extras = ["s3"], version = "^1.33.6"}
flake8 = "*"
gitpython = "^3.1.32"
isort = "*"
mypy = "*"
pre-commit = "*"
types-beautifulsoup4 = "*"
types-colorama = "*"
types-Markdown = "*"
types-Pillow = "*"

# Testing
asynctest = "*"
coverage = "*"
pytest = "^7.4.0"
pytest-asyncio = "*"
pytest-benchmark = "*"
pytest-cov = "*"
pytest-integration = "*"
pytest-mock = "*"
pytest-recording = "*"
pytest-xdist = "*"
vcrpy = {git = "https://github.com/Significant-Gravitas/vcrpy.git", rev = "master"}
autoflake = "^2.2.1"
autopep8 = "^2.0.4"
pyupgrade = "^3.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
packages = ["afaas"]
extend-exclude = '.+/(dist|.venv|venv|build|data)/.+'
exclude = '''
(
  /(
      benchmark
    | autogpts
    | .tox
    | __pycache__
    | .env
    | venv
    | .venv
    | .github
    | reports
    | dist
    | agent
    | code
    | agbenchmark/challenges
  )/
)
'''


[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
extend_skip = [
    "agbenchmark_config/temp_folder/",
    "data/",
    ".github/",
]


[tool.mypy]
follow_imports = 'skip'
check_untyped_defs = true
disallow_untyped_calls = true
files = [
    'autogpt/**/*.py',
    'tests/**/*.py'
]

[[tool.mypy.overrides]]
module = [
    'requests.*',
    'yaml.*'
]
ignore_missing_imports = true


[tool.pytest.ini_options]
addopts = "-vv --cov=AFAAS --cov-branch --cov-report=term-missing --cov-report=xml --durations=10"
markers = [
    "requires_openai_api_key",
    "requires_huggingface_api_key"
]
norecursedirs = ["autogpt_test_to_migrate", "app"]
log_level = "ERROR"
asyncio_mode = "auto"
testpaths = [
    "tests"
]